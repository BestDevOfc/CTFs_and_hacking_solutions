** after calling exports in console and double clicking it took me to the compiled WASM file from there
we can dig into the web assembly code. **

(func $check_flag (;2;) (export "check_flag") (result i32)
(local $var0 i32) (;  0  ;)
(local $var1 i32) (;  1072  ;)
(local $var2 i32) (;  1024  ;)
(local $var3 i32) (;  var3 is strcmp( var1, var2 )  ;)
(local $var4 i32) (;  = var3  ;)
(local $var5 i32) (;  0  ;)
(local $var6 i32) (;  var6 = if( var4 != var 5 )  ;)
(local $var7 i32) (;  -1 const  ;)
(local $var8 i32) (; XOR( var6, -1 ) ;)
(local $var9 i32) (;  1 const  ;)
(local $var10 i32) (;  var10 = var8 && var9  ;) 


i32.const 0
local.set $var0
i32.const 1072
local.set $var1
i32.const 1024
local.set $var2

(;  strcmp( 1072, 1024 )  ;)
local.get $var2
local.get $var1
call $strcmp

(;  var3 = result of strcmp )  ;)
local.set $var3
local.get $var3

(;  var4 = var3  ;)
local.set $var4

(;  var5 is set to var4 = 0 )  ;)
local.get $var0
local.set $var5

(;  var6 = if( var4 != var 5 )  ;)
local.get $var4
local.get $var5
i32.ne
local.set $var6

(;  const var7 = -1  ;)
i32.const -1
local.set $var7

(;  XOR var6 and -1  ;)
local.get $var6
local.get $var7
i32.xor

(;  var8 = XOR(var6, -1)  ;)
local.set $var8

(;  var9 = 1 const  ;)
i32.const 1
local.set $var9

(;  var8 && var9  ;)
local.get $var8
local.get $var9
i32.and

(;  var10 = var8 && var9  ;)
local.set $var10
local.get $var10
return
)